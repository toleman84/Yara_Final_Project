services:
  # Existing mail components
  postfix:
    build: ./postfix
    container_name: postfix
    hostname: email-threat-docker.local
    ports:
      - "25:25"
    volumes:
      - ./logs/postfix:/var/log/postfix
      - ./postfix/main.cf:/etc/postfix/main.cf:ro
      - ./postfix/master.cf:/etc/postfix/master.cf:ro
      - ./postfix/transport:/etc/postfix/transport:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD-SHELL", "pgrep master || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    environment:
      - TZ=America/Argentina/Buenos_Aires
    networks:
      threat-net:
        ipv4_address: 172.20.0.100
    restart: unless-stopped

  scanner:
    build:
      context: .
      dockerfile: scanner/Dockerfile
    container_name: scanner
    ports:
      - "10026:10025"
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import socket; socket.create_connection((\"localhost\", 10025), timeout=3)'"]
      interval: 5s
      timeout: 3s
      retries: 3
    environment:
      - REINJECTION_HOST=postfix
      - REINJECTION_PORT=10026
      - SCANNER_LISTEN_PORT=10025
      - TZ=America/Argentina/Buenos_Aires
    volumes:
      - ./logs/scanner:/var/log/
      - ./rules:/app/rules:ro
      - quarantine_data:/app/quarantine
      - /etc/localtime:/etc/localtime:ro
    networks:
      - threat-net
    restart: unless-stopped


  sigma_analyzer:
    build:
      context: ./sigma_analyzer
      dockerfile: Dockerfile
    container_name: sigma_analyzer
    volumes:
      - ./logs/sigma:/var/log/sigma
      - /etc/localtime:/etc/localtime:ro
    environment:
      - LOKI_URL=http://loki:3100
      - TZ=America/Argentina/Buenos_Aires
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - threat-net



  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/:/etc/loki/:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - threat-net

  # Grafana for dashboards
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/plugins:/etc/grafana/provisioning/plugins
      - ./grafana/provisioning/notifiers:/etc/grafana/provisioning/notifiers
      - ./grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - TZ=America/Argentina/Buenos_Aires
    networks:
      - threat-net
    restart: unless-stopped

  # Promtail for shipping logs to Loki
  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./logs/postfix/:/var/log/postfix
      - ./logs/scanner:/var/log/scanner
      - ./logs/sigma:/var/log/sigma
      - ./promtail/config.yml:/etc/promtail/config.yml
      - positions:/tmp
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - threat-net

volumes:
  quarantine_data:
  loki_data:
  grafana_data:
  positions:
  

networks:
  threat-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16